name: PyInstaller-windows

on: 
  push:    
    tags:
    - '202*' #any tag in the form 202Ymmdd
        

jobs:

  create_release:
    name: Create release
    runs-on: windows-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # This is important for the Git history
      - name: Generate Incremental Changelog
        id: create_inc_changelog
        working-directory: ./bundle
        run: ./gen_changelog.ps1
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
          body_path: changelog.txt
          
  build_release:
    name: Build Executables
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            zip_end: _mac.zip
            build_script: sh build_mac_os.sh
          - os: windows-latest
            zip_end: _win.zip
            build_script: ./build_windows.ps1
          - os: ubuntu-latest
            zip_end: _linux.zip
            build_script: sh build_mac_os.sh
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # This is important for the Git history
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9          
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash 
    - name: Install dependencies
      working-directory: ./bundle
      run: |      
        ${{ matrix.build_script }} ${{ steps.get_version.outputs.VERSION }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:         
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./bundle/TetrisFish_${{ steps.get_version.outputs.VERSION }}${{matrix.zip_end}}
        asset_name: TetrisFish_${{ steps.get_version.outputs.VERSION }}${{matrix.zip_end}}
        asset_content_type: application/zip